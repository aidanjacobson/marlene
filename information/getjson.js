async function getJSON() {
    try {
        var response = await fetch("data.json");
        return await response.json();
    } catch(e) {
        console.log("Unable to use Fetch API. Reverting to local data stores...");
        return JSON.parse(atob(dataLocal));
    }
}
var dataLocal = "ewogICAgImRlY3J5cHRlZCI6IHRydWUsCiAgICAiY2FyZHMiOiBbCiAgICAgICAgewogICAgICAgICAgICAibmFtZSI6ICJHcnViSHViIiwKICAgICAgICAgICAgImRlc2NyaXB0aW9uIjogIlJlc3RhdXJhbnQgcG9ydGFsIGZvciBncnViaHViIiwKICAgICAgICAgICAgImZpZWxkcyI6IFsKICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAia2V5IjogIkVtYWlsIiwKICAgICAgICAgICAgICAgICAgICAidmFsdWUiOiAib3Jkb25lemVudGVycHJpc2VzbGxjQGhvdG1haWwuY29tIgogICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAia2V5IjogIlBhc3N3b3JkIiwKICAgICAgICAgICAgICAgICAgICAidmFsdWUiOiAic2FtdXJhaXNhbXM1MDI1IgogICAgICAgICAgICAgICAgfQogICAgICAgICAgICBdLAogICAgICAgICAgICAiZXh0ZXJuYWxzIjogWwogICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICJ0eXBlIjogImxpbmsiLAogICAgICAgICAgICAgICAgICAgICJuYW1lIjogIkNsaWNrIGhlcmUgdG8gb3BlbiIsCiAgICAgICAgICAgICAgICAgICAgInZhbHVlIjogImh0dHBzOi8vcmVzdGF1cmFudC5ncnViaHViLmNvbS8iCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIF0KICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICAgIm5hbWUiOiAiVWJlciBFYXRzIiwKICAgICAgICAgICAgImRlc2NyaXB0aW9uIjogIlViZXIgRWF0cyBSZXN0YXVyYW50IFBvcnRhbCIsCiAgICAgICAgICAgICJmaWVsZHMiOiBbCiAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgImtleSI6ICJFbWFpbCIsCiAgICAgICAgICAgICAgICAgICAgInZhbHVlIjogIm9yZG9uZXplbnRlcnByaXNlc2xsY0Bob3RtYWlsLmNvbSIKICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgImtleSI6ICJQYXNzd29yZCIsCiAgICAgICAgICAgICAgICAgICAgInZhbHVlIjogInNhbXVyYWlzYW1zNTAyNSIKICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgImtleSI6ICJQSU4iLAogICAgICAgICAgICAgICAgICAgICJ2YWx1ZSI6ICIzNTU1IgogICAgICAgICAgICAgICAgfQogICAgICAgICAgICBdLAogICAgICAgICAgICAiZXh0ZXJuYWxzIjogWwogICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICJ0eXBlIjogImxpbmsiLAogICAgICAgICAgICAgICAgICAgICJuYW1lIjogIkNsaWNrIGhlcmUgdG8gb3BlbiIsCiAgICAgICAgICAgICAgICAgICAgInZhbHVlIjogImh0dHBzOi8vcmVzdGF1cmFudC51YmVyLmNvbS8iCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIF0KICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICAgIm5hbWUiOiAiRG9vckRhc2giLAogICAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiRG9vckRhc2ggTWVyY2hhbnQgUG9ydGFsIiwKICAgICAgICAgICAgImZpZWxkcyI6IFsKICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAia2V5IjogIkVtYWlsIiwKICAgICAgICAgICAgICAgICAgICAidmFsdWUiOiAib3Jkb25lemVudGVycHJpc2VzbGxjQGhvdG1haWwuY29tIgogICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAia2V5IjogIlBhc3N3b3JkIiwKICAgICAgICAgICAgICAgICAgICAidmFsdWUiOiAic2FtdXJhaXNhbXM1MDI1IgogICAgICAgICAgICAgICAgfQogICAgICAgICAgICBdLAogICAgICAgICAgICAiZXh0ZXJuYWxzIjogWwogICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICJ0eXBlIjogImxpbmsiLAogICAgICAgICAgICAgICAgICAgICJuYW1lIjogIkNsaWNrIGhlcmUgdG8gb3BlbiIsCiAgICAgICAgICAgICAgICAgICAgInZhbHVlIjogImh0dHBzOi8vd3d3LmRvb3JkYXNoLmNvbS9tZXJjaGFudC8iCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIF0KICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICAgIm5hbWUiOiAiUG9zdG1hdGVzIiwKICAgICAgICAgICAgImRlc2NyaXB0aW9uIjogIlBvc3RtYXRlcyBQYXJ0bmVyIExvZ2luIiwKICAgICAgICAgICAgImZpZWxkcyI6IFsKICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAia2V5IjogIkVtYWlsIiwKICAgICAgICAgICAgICAgICAgICAidmFsdWUiOiAib3Jkb25lemVudGVycHJpc2VzbGxjQGhvdG1haWwuY29tIgogICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAia2V5IjogIlBhc3N3b3JkIiwKICAgICAgICAgICAgICAgICAgICAidmFsdWUiOiAic2FtdXJhaXNhbXM1MDI1IgogICAgICAgICAgICAgICAgfQogICAgICAgICAgICBdLAogICAgICAgICAgICAiZXh0ZXJuYWxzIjogWwogICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICJ0eXBlIjogImxpbmsiLAogICAgICAgICAgICAgICAgICAgICJuYW1lIjogIkNsaWNrIGhlcmUgdG8gb3BlbiIsCiAgICAgICAgICAgICAgICAgICAgInZhbHVlIjogImh0dHBzOi8vcGFydG5lci5wb3N0bWF0ZXMuY29tLyIKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgXQogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgICAibmFtZSI6ICJJbnRlcm5ldCBSYWRpbyIsCiAgICAgICAgICAgICJkZXNjcmlwdGlvbiI6ICJUdW5lSW4gSW50ZXJuZXQgUmFkaW8gLSBUb2RheSdzIEhpdHMiLAogICAgICAgICAgICAiZmllbGRzIjogW10sCiAgICAgICAgICAgICJleHRlcm5hbHMiOiBbCiAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgInR5cGUiOiAidGV4dCIsCiAgICAgICAgICAgICAgICAgICAgInZhbHVlIjogIlR1cm4gdm9sdW1lIG9uIGJveCBkb3duIHRvIDAuNSBhbmQgc2VsZWN0IFwiUGhvbm9cIiBiZWZvcmUgcGxheWluZyBtdXNpYy4iCiAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICJ0eXBlIjogImxpbmsiLAogICAgICAgICAgICAgICAgICAgICJuYW1lIjogIkNsaWNrIGhlcmUgdG8gb3BlbiIsCiAgICAgICAgICAgICAgICAgICAgInZhbHVlIjogImh0dHBzOi8vdHVuZWluLmNvbS90b2RheXMtaGl0cy8iCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIF0KICAgICAgICB9CiAgICBdCn0=";